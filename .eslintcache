[{"/Users/apple/Documents/Projects/animated-dropdown/src/index.js":"1","/Users/apple/Documents/Projects/animated-dropdown/src/reportWebVitals.js":"2","/Users/apple/Documents/Projects/animated-dropdown/src/App.js":"3","/Users/apple/Documents/Projects/animated-dropdown/src/components/AnimatedDropdown/AnimatedDropdown.js":"4"},{"size":500,"mtime":1608233207468,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608233207470,"results":"7","hashOfConfig":"6"},{"size":1129,"mtime":1608386203003,"results":"8","hashOfConfig":"6"},{"size":2139,"mtime":1608386204078,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ok44fo",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/apple/Documents/Projects/animated-dropdown/src/index.js",[],["20","21"],"/Users/apple/Documents/Projects/animated-dropdown/src/reportWebVitals.js",[],"/Users/apple/Documents/Projects/animated-dropdown/src/App.js",[],"/Users/apple/Documents/Projects/animated-dropdown/src/components/AnimatedDropdown/AnimatedDropdown.js",["22","23"],"import React, { useState } from 'react'\n\nimport './AnimatedDropdown.scss'\n\nconst AnimatedDropdown = (props) => {\n  const [list, setList] = useState(props.list)\n  const [showList, setShowList] = useState(false)\n  const [selectedItem, setSelectedItem] = useState(null)\n\n  function showDropDown() {\n    setShowList(!showList)\n  }\n\n  function selectItem(item) {\n    setSelectedItem(item)\n    setShowList(false)\n  }\n\n  let classes = [\"AnimatedDropdown\"]\n  if(props.shape){classes.push(`AnimatedDropdown--${props.shape}`)}\n\n  let shape = \"\"\n  if(props.shape === 'rectangle'){\n    shape = \"AnimatedDropdown__header--rectangle\"\n  } else {\n    shape = \"AnimatedDropdown__header--circle\"\n  }\n\n  let header = null\n\n  if(props.shape === 'circle') {\n    header = \n    <div className=\"AnimatedDropdown__header\" onClick={() => showDropDown()}>\n      <img className={shape + \"--title\"} src={props.picture} alt=\"foto\"/>\n    </div>\n  } else {\n    header =\n    <div className=\"AnimatedDropdown__header\" onClick={() => showDropDown()}>\n      <div className={shape + \"--title\"} >{props.title}</div>\n    </div>\n  }\n\n  let arrow = null\n  if(props.shape === 'circle' && showList) {\n    arrow = <div className=\"AnimatedDropdown__arrow AnimatedDropdown__arrow--circle\"/>\n  } else if(props.shape === 'rectangle' && showList){ \n    arrow = <div className=\"AnimatedDropdown__arrow AnimatedDropdown__arrow--rectangle\"/>\n  } else {\n    arrow = null\n  }\n\n  let headerPosition = ''\n  if(props.headerPosition === \"right\") {\n    headerPosition = '--right'\n  } \n\n  return (\n    <div className={classes.join(' ')}>\n      {header}\n      {arrow}\n      <div\n        className={props.shape === \"circle\" ? 'AnimatedDropdown__list AnimatedDropdown__list--circle' : 'AnimatedDropdown__list AnimatedDropdown__list--rectangle'+ headerPosition}\n        style={{ display: showList ? \"block\" : \"none\" }}>\n        {list.map(item => (\n          <div className=\"AnimatedDropdown__item\" key={item.id} onClick={() => selectItem(item)}>\n            <div style={{paddingTop: \"12px\"}}>{item.value}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default AnimatedDropdown\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":6,"column":16,"nodeType":"30","messageId":"31","endLine":6,"endColumn":23},{"ruleId":"28","severity":1,"message":"32","line":8,"column":10,"nodeType":"30","messageId":"31","endLine":8,"endColumn":22},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'setList' is assigned a value but never used.","Identifier","unusedVar","'selectedItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]